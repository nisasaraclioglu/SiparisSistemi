@model List<ProductViewModel>
@{
    ViewData["Title"] = "TechStore - Teknoloji Mağazanız";
}

<header class="header">
    <div class="header-container">
        <div class="logo">Tech<span class="store-highlight">Store</span></div>
        <div class="search-bar">
            <input type="text" id="searchInput" placeholder="Ürün aramak için yazın..." />
            <button><i class="fas fa-search"></i></button>
        </div>
        <div class="header-icons">
            <a href="/Customer/Account"><i class="fas fa-user"></i> Hesabım</a>
            <a href="/Customer/Orders" class="cart-link"><i class="fas fa-shopping-cart"></i> Sepetim</a>
        </div>
    </div>
</header>

<main>
    <section class="product-grid">
        @foreach (var product in Model)
        {
            <div class="product-card">
                <div class="product-image">
                    <img src="@product.ImageUrl" alt="@product.ProductName" />
                </div>
                <div class="product-info">
                    <h4>@product.ProductName</h4>
                    <div class="product-price">₺@product.Price.ToString("N2")</div>
                    <div class="stock-info @(product.Stock <= 5 ? "critical-stock" : "")">
                        Stok: @product.Stock
                    </div>
                    <div class="quantity-selector">
                        <label for="quantity-@product.ProductID">Adet:</label>
                        <input type="number"
                               id="quantity-@product.ProductID"
                               min="1"
                               max="@product.Stock"
                               value="1"
                               class="form-control quantity-input" />
                    </div>
                    <button onclick="addToCart(@product.ProductID, document.getElementById('quantity-@product.ProductID').value)"
                            class="btn-add-to-cart">
                        <i class="fas fa-shopping-cart"></i> Sepete Ekle
                    </button>
                </div>
            </div>
        }
    </section>
</main>

@section Scripts {
    <script>
        function addToCart(productId, quantity) {
            $.ajax({
                url: '@Url.Action("AddToCart", "Customer")',
                type: 'POST',
                data: { productId: productId, quantity: quantity },
                success: function(response) {
                    if (response.success) {
                        alert(response.message);
                        window.location.href = '@Url.Action("Orders", "Customer")';
                    } else {
                        alert(response.message);
                    }
                },
                error: function() {
                    alert('Bir hata oluştu.');
                }
            });
        }

        // Arama fonksiyonu
        $('#searchInput').on('keyup', function() {
            var searchTerm = $(this).val();
            if (searchTerm.length > 2) {
                $.ajax({
                    url: '@Url.Action("Search", "Customer")',
                    type: 'POST',
                    data: { searchTerm: searchTerm },
                    success: function(response) {
                        $('.product-grid').html(response);
                    },
                    error: function() {
                        alert('Arama sırasında bir hata oluştu.');
                    }
                });
            }
        });
    </script>
}

<style>
    .critical-stock {
        color: red;
        font-weight: bold;
    }
</style>