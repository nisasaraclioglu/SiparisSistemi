@model IEnumerable<SiparisSistemi.Models.Orders>

@{
    ViewData["Title"] = "Tüm Siparişler";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="admin-container">
    <div class="admin-sidebar">
        <div class="admin-header">
            <h2>Tech<span class="store-highlight">Store</span></h2>
            <p>Admin Panel</p>
        </div>
        <nav class="admin-nav">
            <a href="@Url.Action("Dashboard", "Admin")" class="admin-nav-item">
                <i class="fas fa-home"></i> Ana Sayfa
            </a>
            <a href="@Url.Action("AddProduct", "Admin")" class="admin-nav-item">
                <i class="fas fa-plus"></i> Ürün Ekle
            </a>
            <a href="@Url.Action("OrdersApproval", "Admin")" class="admin-nav-item">
                <i class="fas fa-list"></i> Sipariş Onaylama
            </a>
            <a href="@Url.Action("ApprovedOrders", "Admin")" class="admin-nav-item active">
                <i class="fas fa-list"></i> Tüm Siparişler
            </a>
            <a href="@Url.Action("Logout", "Login")" class="admin-nav-item">
                <i class="fas fa-sign-out-alt"></i> Çıkış Yap
            </a>

            <!-- Log Paneli -->
            <div class="sidebar-log-panel">
                <h6>Loglar</h6>
                <ul id="logList" class="log-list">
                </ul>
            </div>
        </nav>
    </div>
    <div class="admin-content">
        <div class="admin-content-header">
            <h3><i class="fas fa-box"></i> Sipariş Listesi</h3>
            <p>Toplam <strong>@Model.Count()</strong> sipariş bulundu.</p>
        </div>

        <div class="table-responsive shadow-sm">
            <table class="table table-hover table-bordered align-middle">
                <thead class="table-dark">
                    <tr>
                        <th scope="col">Sipariş No</th>
                        <th scope="col">Müşteri</th>
                        <th scope="col">Ürün</th>
                        <th scope="col">Miktar</th>
                        <th scope="col">Toplam Fiyat</th>
                        <th scope="col">Sipariş Tarihi</th>
                        <th scope="col">Durum</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        @foreach (var order in Model)
                        {
                            <tr>
                                <td>@order.OrderID</td>
                                <td>@order.Customer?.CustomerName</td>
                                <td>@order.Product?.ProductName</td>
                                <td>@order.Quantity</td>
                                <td>@order.TotalPrice.ToString("C")</td>
                                <td>@order.OrderDate.ToString("dd/MM/yyyy HH:mm")</td>
                                <td>
                                    @switch (order.OrderStatus)
                                    {
                                        case "Completed":
                                            <span class="badge bg-success">Tamamlandı</span>
                                            break;
                                        case "Pending":
                                            <span class="badge bg-warning text-dark">Bekliyor</span>
                                            break;
                                        case "Cancelled":
                                            <span class="badge bg-danger">İptal Edildi</span>
                                            break;
                                        default:
                                            <span class="badge bg-secondary">Admin Onayı Bekliyor</span>
                                            break;
                                    }
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="7" class="text-center">Henüz sipariş bulunmamaktadır.</td>
                        </tr>
                    }
                </tbody>

            </table>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        $(document).ready(function() {
            $("#searchInput").on("keyup", function() {
                var value = $(this).val().toLowerCase();
                $(".table tbody tr").filter(function() {
                    return $(this).text().toLowerCase().indexOf(value) > -1;
                }).show().end().not(function() {
                    return $(this).text().toLowerCase().indexOf(value) > -1;
                }).hide();
            });
        });
    </script>
}
<script>
        function fetchLogs() {
        $.ajax({
            url: '@Url.Action("FetchLogs", "Admin")', // FetchLogs action'ı
            method: 'GET',
            success: function (data) {
                $('#logList').html(''); // Mevcut logları temizle
                data.forEach(function (log) {
                    const logItem = `
                        <li>
                            <span><strong>${log.logType}:</strong> ${log.logDetails}</span>
                            <div style="font-size: 10px; color: #888; margin-top: 5px;">${log.logDate}</div>
                        </li>
                    `;
                    $('#logList').append(logItem);
                });
            },
            error: function () {
                console.error("Loglar yüklenemedi.");
            }
        });
    }

    // Logları her saniyede bir güncelle
    setInterval(fetchLogs, 500);

    // Sayfa yüklendiğinde logları getir
    $(document).ready(fetchLogs);
</script>
